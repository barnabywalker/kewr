% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ipni.R
\name{search_ipni}
\alias{search_ipni}
\title{Search IPNI.}
\usage{
search_ipni(query, filters = NULL, page = 1, limit = 50, .wait = 0.1)
}
\arguments{
\item{query}{The string to query IPNI with. If using keywords, the query
must be formatted as a list.}

\item{filters}{Filter to apply to search results.}

\item{page}{The page of records to return.}

\item{limit}{The maximum number of records to return.}

\item{.wait}{Time to wait before making a request, to help
rate limiting.}
}
\value{
Returns an object of class \code{ipni_search} that is a simple
structure with slots for:
\itemize{
\item \code{total}: the total number of results held in POWO for the query
\item \code{pages}: the total number of results pages for the query.
\item \code{limit}: the maximum number of results requested from the API, per page.
\item \code{results}: the query results parsed into a list.
\item \code{query}: the query string submitted to the API.
\item \code{response}: the \link[httr:response]{httr response object}.
}
}
\description{
Query the International Plant Names Index for nomenclatural information.
}
\details{
The \href{https://www.ipni.org/}{International Plant Names Index (IPNI)}
is a service that provides nomenclatural information for vascular plant names.

The search API allows users to query the database for plant names,
as well as authors and publications. There may be limited support for
some sort of fuzzy matching.

There is some support for querying using keyword arguments. Documentation for
the API is currently available in the \href{https://github.com/RBGKew/pykew/blob/master/pykew/ipni_terms.py}{\code{pykew} package},
so keywords have been copied across from there. There are sets of keywords
relating to plants, authors, and publications. A full list of keywords can be viewed
using the \code{get_keywords} function.

The API will return nomenclatural information (publication date, nomenclatural status, author, etc.)
of all names matching the query. These results can be limited, for example to only family names,
using filters. Use the \code{get_filters} function to get a list of all implemented filters.
}
\examples{
# search for all names containing Poa annua
results <- search_ipni("Poa annua")

# tidy search results in a table
tidy(results)

# extract author team information for the search results
results_tbl <- tidy(results)
tidyr::unnest(results_tbl, cols=c(authorTeam), names_sep="_")

# filter results to only species names
species_results <- search_ipni("Poa annua", filters="species")
tidy(species_results)

# search for species from Mexico published in 1989
q <- list(published="1989", distribution="Mexico")
f <- "species"
results <- search_ipni(q, filters=f)
tidy(results)

# search for an author by surname
author_results <- search_ipni(list(author_surname="Gardiner"))
tidy(author_results)

}
\seealso{
\itemize{
\item \code{\link[=lookup_ipni]{lookup_ipni()}} to look up a name using an IPNI ID.
}

Other IPNI functions: 
\code{\link{lookup_ipni}()}
}
\concept{IPNI functions}
